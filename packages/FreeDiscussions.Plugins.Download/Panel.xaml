<plugin:Panel x:Class="FreeDiscussions.Plugins.Download.Panel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FreeDiscussions.Plugins.Download"
             xmlns:wv2="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
              xmlns:svg1="clr-namespace:SVGImage.SVG;assembly=DotNetProjects.SVGImage"
               xmlns:grid="clr-namespace:FreeDiscussions.Plugins.Download.DataGrid"
             xmlns:plugin="clr-namespace:FreeDiscussions.Plugin;assembly=FreeDiscussions.Plugin"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <plugin:Panel.Resources>
        <Style x:Key="CenterGridHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
    </plugin:Panel.Resources>

    <Grid>
        <TabControl Margin="0 3 0 0">
            <TabItem Header="Downloads">
                <!-- Toolbars, SETTINGS WINDOW, NZB DOWNLOAD etc.-->
                <DataGrid EnableRowVirtualization="True"  SelectedCellsChanged="downloadGrid_SelectedCellsChanged"  AlternatingRowBackground="White"  GridLinesVisibility="None" AutoGenerateColumns="False" Name="downloadGrid" CanUserAddRows="False" BorderThickness="0" Background="White">

                    <DataGrid.Columns>
                        <DataGridTemplateColumn
					Header="">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="{Binding Level, Converter={StaticResource LevelSpaceConverter}}"/>
                                            <ColumnDefinition Width="{StaticResource TreeToggleWidth}"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <CheckBox 
									Grid.Column="1"
                                    Style="{StaticResource styleCustomCheckBox}" 
									IsChecked="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									Visibility="{Binding HasChildren, Converter={StaticResource TreeToggleConverter}}"/>

                                        <TextBlock
									Grid.Column="2"
                                    Margin="0 0 12 0"
									Text="">
                                            <TextBlock.Style>
                                                <Style>
                                                    <Setter Property="TextBlock.FontWeight" Value="Bold" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsRead}" Value="True">
                                                            <Setter Property="TextBlock.FontWeight" Value="Normal" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn
					Header="Status"
                    IsReadOnly="True"
                    CanUserSort="False"
					Binding="{Binding Status}"/>
                        <DataGridTextColumn
					Header="Name"
                    IsReadOnly="True"
                    CanUserSort="False"
					Binding="{Binding Name}"/>
                        <DataGridTextColumn
					Header="Size Loaded"
                    IsReadOnly="True"
                    CanUserSort="False"
					Binding="{Binding SizeLoaded}"/>
                        <DataGridTextColumn
					Header="Total Loaded"
                    IsReadOnly="True"
                    CanUserSort="False"
					Binding="{Binding TotalLoaded}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Finished Downloads">
                <DataGrid EnableRowVirtualization="True"  SelectedCellsChanged="finishedDownloadGrid_SelectedCellsChanged"  AlternatingRowBackground="White"  GridLinesVisibility="None" AutoGenerateColumns="False" Name="finishedDownloadGrid" CanUserAddRows="False" BorderThickness="0" Background="White">

                    <DataGrid.Columns>
                        <DataGridTemplateColumn
					Header="Betreff">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="{Binding Level, Converter={StaticResource LevelSpaceConverter}}"/>
                                            <ColumnDefinition Width="{StaticResource TreeToggleWidth}"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <CheckBox 
									Grid.Column="1"
                                    Style="{StaticResource styleCustomCheckBox}" 
									IsChecked="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									Visibility="{Binding HasChildren, Converter={StaticResource TreeToggleConverter}}"/>

                                        <TextBlock
									Grid.Column="2"
                                    Margin="0 0 12 0"
									Text="{Binding Subject}">
                                            <TextBlock.Style>
                                                <Style>
                                                    <Setter Property="TextBlock.FontWeight" Value="Bold" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsRead}" Value="True">
                                                            <Setter Property="TextBlock.FontWeight" Value="Normal" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn
					Header="Absender"
                    IsReadOnly="True"
                    CanUserSort="False"
					Binding="{Binding From}"/>
                        <DataGridTextColumn
					Header="Datum"
                    IsReadOnly="True"
                    CanUserSort="False"
					Binding="{Binding Date, StringFormat=\{0:dd.MM.yy HH:mm:ss\}}"/>
                        <DataGridTextColumn
					Header="# Beiträge"
                    IsReadOnly="True"
                    CanUserSort="False"
					Binding="{Binding Children.Count}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
        </TabControl>
    </Grid>

</plugin:Panel>

