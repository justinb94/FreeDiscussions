# This job triggers on every push to master or pull request
# It runs lerna version and increases the version number of
# changed packages (patch)
# This will will trigger workflow => deploy

name: Release

on:
  # pull_request:
  #   branches: [main]
  #   types: [closed]
  push:
    branches: [main]

jobs:
  build_and_test:
    runs-on: windows-latest

    strategy:
      matrix:
        targetplatform: [x64]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: unshallow
        run: |
          git fetch --unshallow --tags
          git tag --list

      - uses: actions/setup-dotnet@v1
        with: 
          dotnet-version: '3.1.x'

      - name: "Client: Get Version"
        uses: kzrnm/get-net-sdk-project-versions-action@v1
        id: get-version
        with:
          proj-path: ./packages/FreeDiscussions.Client/FreeDiscussions.Client.csproj

      - name: "Client: Build"
        run: cd packages && dotnet build FreeDiscussions.Client

      - name: Workaround
        run: Get-ChildItem -recurse | Where-Object { $_.Name -match '\.dll' -and $_.Name -notmatch 'FreeDiscussion' } | Foreach-object { $OldName = $_.name; $NewName = $_.name -replace '.dll','.__dll__'; Rename-Item -Path $_.PSPath -Newname $NewName; Write-Output $("Renamed {0} to {1}" -f $OldName,$NewName)}


      - name: "Client: Sign"
        uses: DanaBear/code-sign-action@v4
        with:
          certificate: '${{ secrets.CERTIFICATE }}'
          password: '${{ secrets.CERTPASSWORD }}'
          certificatesha1: '${{ secrets.CERTHASH }}'
          certificatename: '${{ secrets.CERTNAME }}'
          folder: "packages"
          recursive: true

      - name: Workaround
        run: Get-ChildItem -recurse | Where-Object { $_.Name -match '\.__dll__' } | Foreach-object { $OldName = $_.name; $NewName = $_.name -replace '.__dll__','.dll'; Rename-Item -Path $_.PSPath -Newname $NewName; Write-Output $("Renamed {0} to {1}" -f $OldName,$NewName)}

      - name: "Client: Pack"
        run: cd packages && dotnet pack --configuration Release FreeDiscussions.Client 

      - name: "Client: Create Release ZIP"
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'  
          filename: 'FreeDiscussions.Client-${{steps.get-version.outputs.version-prefix}}.zip'
          directory: ./packages/FreeDiscussions.Client/bin/Release/netcoreapp3.1
          exclusions: '*.git* /*node_modules/* .editorconfig *.pdb *.runtimeconfig.dev.json'      

      - name: "Client: Upload Release ZIP"
        uses: ncipollo/release-action@v1
        with:
          artifacts: "./packages/FreeDiscussions.Client/bin/Release/netcoreapp3.1/FreeDiscussions.Client-${{steps.get-version.outputs.version-prefix}}.zip"
          tag: Client-${{steps.get-version.outputs.version-prefix}}
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true