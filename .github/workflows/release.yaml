# This job triggers on every push to master or pull request
# It runs lerna version and increases the version number of
# changed packages (patch)
# This will will trigger workflow => deploy

name: Release

on:
  # pull_request:
  #   branches: [main]
  #   types: [closed]
  push:
    branches: [main]

jobs:
  build_and_test:
    runs-on: windows-latest

    strategy:
      matrix:
        targetplatform: [x64]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: unshallow
        run: |
          git fetch --unshallow --tags
          git tag --list

      # - name: Import code signing certificate
      #   shell: powershell
      #   run: |
      #     $pfxCertFilePath = Join-Path -Path $PSScriptRoot -ChildPath "CodeSigningCertificate.pfx"
      #     Set-Content -Value $([System.Convert]::FromBase64String($env:BASE64_PFX)) -Path $pfxCertFilePath -Encoding Byte
      #     $codeSigningCert = Import-PfxCertificate -FilePath $pfxCertFilePath -Password $($env:PFX_PASSWORD | ConvertTo-SecureString -AsPlainText -Force) -CertStoreLocation Cert:\CurrentUser\My
      #   env:
      #     BASE64_PFX: ${{ secrets.CERTIFICATE }}
      #     PFX_PASSWORD: ${{ secrets.CERTPASSWORD }}

      - name: Create Code Signing Certificate
        run: |
          New-Item -ItemType directory -Path certificate
          Set-Content -Path certificate\certificate.txt -Value '${{ secrets.CERTIFICATE }}'
          certutil -decode certificate\certificate.txt certificate\certificate.pfx
          

      - uses: actions/setup-dotnet@v1
        with: 
          dotnet-version: '3.1.x'

      - name: "Client: Get Version"
        uses: kzrnm/get-net-sdk-project-versions-action@v1
        id: get-version
        with:
          proj-path: ./packages/FreeDiscussions.Client/FreeDiscussions.Client.csproj

      - name: "Client: Build"
        run: cd packages && dotnet build FreeDiscussions.Client


      # - name: "Client: Sign"
      #   shell: powershell
      #   run: |
      #     # remove git dir from checked out repo
      #     Get-ChildItem -Path "." -Filter ".git*" -Force | ForEach-Object {Remove-Item -Path $_.FullName -Recurse -Force}
      #     $scripts = Get-ChildItem -Path . -Filter "FreeDiscussions.Client.dll" -Recurse -ErrorAction Stop
      #     # load cert
      #     $codeSigningCert = Get-ChildItem Cert:\CurrentUser\My -CodeSigningCert | Select-Object -First 1
      #     foreach ($script in $scripts) {
      #         try {
      #               $scriptContent = Get-Content -Path $script.FullName
      #               Write-Output "Signing `"$($script.Name)`" with certificate `"$($codeSigningCert.Thumbprint)`""
      #               # sign script
      #               $null = Set-AuthenticodeSignature -Certificate $codeSigningCert -FilePath $script.FullName -TimestampServer "http://timestamp.comodoca.com/rfc3161"
      #         }
      #         catch {
      #             Write-Error $_
      #         }
      #     }

      - name: "Client: Pack"
        run: cd packages && dotnet pack --configuration Release FreeDiscussions.Client 

      - name: "Client: Create Release ZIP"
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'  
          filename: 'FreeDiscussions.Client-${{steps.get-version.outputs.version-prefix}}.zip'
          directory: ./packages/FreeDiscussions.Client/bin/Release/netcoreapp3.1
          exclusions: '*.git* /*node_modules/* .editorconfig *.pdb *.runtimeconfig.dev.json'      

      - name: "Client: Upload Release ZIP"
        uses: ncipollo/release-action@v1
        with:
          artifacts: "./packages/FreeDiscussions.Client/bin/Release/netcoreapp3.1/FreeDiscussions.Client-${{steps.get-version.outputs.version-prefix}}.zip"
          tag: Client-${{steps.get-version.outputs.version-prefix}}
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true